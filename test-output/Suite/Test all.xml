<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="6" hostname="Vivek" failures="0" tests="15" name="Test all" time="3.191" errors="0" timestamp="2023-10-28T13:48:26 EDT">
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="@BeforeMethod launchapp" time="-1.698515303088E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated launchapp.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated launchapp.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Logintest" name="@BeforeMethod launchapp" time="2.378">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line 
Host info: host: &amp;apos;VIVEK&amp;apos;, ip: &amp;apos;192.168.2.14&amp;apos;
Build info: version: &amp;apos;4.13.0&amp;apos;, revision: &amp;apos;ba948ece5b*&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;20.0.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line 
Host info: host: 'VIVEK', ip: '192.168.2.14'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:236)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:156)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:151)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:132)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:112)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:102)
at ca.amazon.base.Baseclass.loadbrowser(Baseclass.java:72)
at ca.amazon.testcase.Logintest.launchapp(Logintest.java:28)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Logintest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Logintest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Logintest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Logintest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Logintest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@BeforeMethod launchapp" time="-1.698515305548E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated launchapp.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated launchapp.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Createaccounttest" name="@BeforeMethod launchapp" time="-1.698515306234E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated launchapp.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated launchapp.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Createaccounttest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Createaccounttest" name="@BeforeMethod launchapp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchapp -->
  <testcase classname="ca.amazon.testcase.Createaccounttest" name="@AfterMethod teardown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="selectquantity" time="0.0">
    <skipped/>
  </testcase> <!-- selectquantity -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="validateaddtocartproduct" time="0.0">
    <skipped/>
  </testcase> <!-- validateaddtocartproduct -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="validateproduct" time="0.0">
    <skipped/>
  </testcase> <!-- validateproduct -->
  <testcase classname="ca.amazon.testcase.Addtocarttest" name="validateproductimage" time="0.001">
    <skipped/>
  </testcase> <!-- validateproductimage -->
  <testcase classname="ca.amazon.testcase.Logintest" name="accountdetails" time="0.0">
    <skipped/>
  </testcase> <!-- accountdetails -->
  <testcase classname="ca.amazon.testcase.Logintest" name="emptyemailerror" time="0.0">
    <skipped/>
  </testcase> <!-- emptyemailerror -->
  <testcase classname="ca.amazon.testcase.Logintest" name="logintest" time="0.0">
    <skipped/>
  </testcase> <!-- logintest -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="partialtextvalidate" time="0.0">
    <skipped/>
  </testcase> <!-- partialtextvalidate -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="searchresult" time="0.0">
    <skipped/>
  </testcase> <!-- searchresult -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="searchresult" time="0.0">
    <skipped/>
  </testcase> <!-- searchresult -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="searchresult" time="0.0">
    <skipped/>
  </testcase> <!-- searchresult -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="searchresult" time="0.0">
    <skipped/>
  </testcase> <!-- searchresult -->
  <testcase classname="ca.amazon.testcase.Searchtest" name="validateproductperpage" time="0.0">
    <skipped/>
  </testcase> <!-- validateproductperpage -->
  <testcase classname="ca.amazon.testcase.Createaccounttest" name="validatehellosigninbtn" time="0.0">
    <skipped/>
  </testcase> <!-- validatehellosigninbtn -->
  <testcase classname="ca.amazon.testcase.Createaccounttest" name="verifyemail" time="0.001">
    <skipped/>
  </testcase> <!-- verifyemail -->
  <testcase classname="ca.amazon.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="ca.amazon.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="ca.amazon.base.Baseclass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="ca.amazon.base.Baseclass" name="@BeforeSuite loadconfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadconfig -->
  <testcase classname="ca.amazon.base.Baseclass" name="@BeforeSuite loadconfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadconfig -->
  <testcase classname="ca.amazon.base.Baseclass" name="@BeforeSuite loadconfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadconfig -->
</testsuite> <!-- Test all -->
